<!-- Copyright © 2019 Jeremy Herbison

This file is part of AudioWorks.

AudioWorks is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public
License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
version.

AudioWorks is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
details.

You should have received a copy of the GNU Affero General Public License along with AudioWorks. If not, see
<https://www.gnu.org/licenses/>. -->
    
<Window x:Class="AudioWorks.UI.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prism="http://prismlibrary.com/"
        mc:Ignorable="d"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="AudioWorks" Icon="../Resources/Icon.png" Height="600" Width="1000">
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="9*"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>

        <Button Content="Browse..." Command="{Binding SelectFilesCommand}"/>
        <DataGrid x:Name="DataGrid" Grid.Row="1" ItemsSource="{Binding AudioFiles}" AutoGenerateColumns="False"
                  GridLinesVisibility="Vertical" AlternatingRowBackground="AliceBlue">
            <DataGrid.ItemContainerStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.ItemContainerStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Path" Binding="{Binding Path}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Track #" Binding="{Binding Metadata.TrackNumber, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}" />
                <DataGridTextColumn Header="Title" Binding="{Binding Metadata.Title, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Artist" Binding="{Binding Metadata.Artist, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Composer" Binding="{Binding Metadata.Composer, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Album" Binding="{Binding Metadata.Album, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Year" Binding="{Binding Metadata.Year, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Genre" Binding="{Binding Metadata.Genre, ValidatesOnExceptions=True, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Content="Save" Command="{Binding DataContext.SaveCommand, ElementName=DataGrid}" CommandParameter="{Binding SelectedItem, ElementName=DataGrid}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button Content="Exit" Grid.Row="2" Command="{Binding ExitCommand}"/>

    </Grid>
</Window>
