<!-- Copyright © 2019 Jeremy Herbison

This file is part of AudioWorks.

AudioWorks is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public
License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
version.

AudioWorks is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
details.

You should have received a copy of the GNU Affero General Public License along with AudioWorks. If not, see
<https://www.gnu.org/licenses/>. -->

<mahapps:MetroWindow x:Class="AudioWorks.UI.Views.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                     xmlns:prism="http://prismlibrary.com/"
                     xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
                     xmlns:fluent="urn:fluent-ribbon"
                     xmlns:views="clr-namespace:AudioWorks.UI.Views"
                     prism:ViewModelLocator.AutoWireViewModel="True"
                     mahapps:DialogParticipation.Register="{Binding}"
                     Title="AudioWorks"
                     Icon="../Resources/Icon.png"
                     Height="668"
                     Width="1024"
                     TitleCharacterCasing="Normal">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <prism:InvokeCommandAction Command="{Binding ExitCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <mahapps:MetroWindow.Flyouts>
        <mahapps:FlyoutsControl>
            <mahapps:FlyoutsControl.Resources>
                <Style TargetType="TabControl"
                       x:Key="FlyoutTabControl"
                       BasedOn="{StaticResource {x:Type TabControl}}">
                    <Setter Property="SelectedIndex"
                            Value="0"/>
                    <Setter Property="VerticalAlignment"
                            Value="Stretch"/>
                    <Setter Property="Margin"
                            Value="0,12,22,0"/>
                    <Setter Property="Padding"
                            Value="22,0,0,0"/>
                    <Setter Property="TabStripPlacement"
                            Value="Left"/>
                    <Setter Property="mahapps:TabControlHelper.Underlined"
                            Value="TabPanel"/>
                    <Setter Property="mahapps:TabControlHelper.Transition"
                            Value="Right"/>
                </Style>
                <Style TargetType="TabItem"
                       x:Key="HeaderedTabItem"
                       BasedOn="{StaticResource {x:Type TabItem}}">
                    <Setter Property="Header"
                            Value="{Binding DataContext.Title}"/>
                </Style>
            </mahapps:FlyoutsControl.Resources>
            <mahapps:FlyoutsControl.ItemContainerStyle>
                <Style TargetType="mahapps:Flyout">
                    <Setter Property="Position"
                            Value="Right"/>
                    <Setter Property="AnimateOpacity"
                            Value="True"/>
                    <Setter Property="Margin"
                            Value="0,31,0,23"/>
                </Style>
            </mahapps:FlyoutsControl.ItemContainerStyle>
            <mahapps:Flyout Header="Metadata Settings"
                            x:Name="MetadataFlyout">
                <TabControl prism:RegionManager.RegionName="MetadataSettings"
                            Style="{StaticResource FlyoutTabControl}"
                            ItemContainerStyle="{StaticResource HeaderedTabItem}">
                </TabControl>
            </mahapps:Flyout>
            <mahapps:Flyout Header="Analysis Settings"
                            x:Name="AnalysisFlyout">
                <TabControl prism:RegionManager.RegionName="AnalysisSettings"
                            Style="{StaticResource FlyoutTabControl}"
                            ItemContainerStyle="{StaticResource HeaderedTabItem}">
                </TabControl>
            </mahapps:Flyout>
            <mahapps:Flyout Header="Encoder Settings"
                            x:Name="EncoderFlyout">
                <TabControl prism:RegionManager.RegionName="EncoderSettings"
                            Style="{StaticResource FlyoutTabControl}"
                            ItemContainerStyle="{StaticResource HeaderedTabItem}"/>
            </mahapps:Flyout>
        </mahapps:FlyoutsControl>
    </mahapps:MetroWindow.Flyouts>

    <DockPanel>

        <fluent:Ribbon DockPanel.Dock="Top"
                       IsQuickAccessToolBarVisible="False">
            <fluent:RibbonTabItem Header="Home">

                <fluent:RibbonGroupBox Header="File" ItemContainerStyle="{StaticResource LargeRibbonButton}">
                    <fluent:DropDownButton Header="Open"
                                           LargeIcon="{StaticResource OpenFileDialogImage}"
                                           fluent:KeyTip.Keys="O">
                        <fluent:MenuItem Header="Select File(s)"
                                         Command="{Binding OpenFilesCommand}"
                                         Icon="{StaticResource OpenFileImage}"
                                         fluent:KeyTip.Keys="F"/>
                        <fluent:MenuItem Header="Search a Directory"
                                         Command="{Binding OpenDirectoryCommand}"
                                         Icon="{StaticResource OpenFolderImage}"
                                         fluent:KeyTip.Keys="D"/>
                    </fluent:DropDownButton>
                    <fluent:Button Header="Exit"
                                   Click="ExitButton_OnClick"
                                   LargeIcon="{StaticResource ExitImage}"
                                   fluent:KeyTip.Keys="X"/>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Header="Options" ItemContainerStyle="{StaticResource LargeRibbonButton}">
                    <fluent:DropDownButton Header="Grouping"
                                           LargeIcon="{StaticResource GroupClauseImage}"
                                           fluent:KeyTip.Keys="G">
                        <fluent:DropDownButton.ItemContainerStyle>
                            <Style TargetType="fluent:MenuItem">
                                <Setter Property="IsCheckable"
                                        Value="True"/>
                                <Setter Property="IsDefinitive"
                                        Value="True"/>
                            </Style>
                        </fluent:DropDownButton.ItemContainerStyle>
                        <fluent:MenuItem Header="None"
                                         IsChecked="{Binding GroupingDisabled}"/>
                        <fluent:MenuItem Header="By Directory"
                                         IsChecked="{Binding GroupByDirectory}"/>
                        <fluent:MenuItem Header="By Album"
                                         IsChecked="{Binding GroupByAlbum}"/>
                    </fluent:DropDownButton>
                    <fluent:DropDownButton Header="Show/Hide Columns"
                                           LargeIcon="{StaticResource AddRemoveColumnsImage}"
                                           fluent:KeyTip.Keys="C">
                        <fluent:DropDownButton.ItemContainerStyle>
                            <Style TargetType="fluent:MenuItem">
                                <Setter Property="IsCheckable"
                                        Value="True"/>
                                <Setter Property="IsDefinitive"
                                        Value="False"/>
                            </Style>
                        </fluent:DropDownButton.ItemContainerStyle>
                        <fluent:MenuItem Header="File Name"
                                         x:Name="FileNameColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:MenuItem Header="Path"
                                         x:Name="PathColumnCheckBox"/>
                        <fluent:GroupSeparatorMenuItem/>
                        <fluent:MenuItem Header="Album"
                                         x:Name="AlbumColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:MenuItem Header="Album Artist"
                                         x:Name="AlbumArtistColumnCheckBox"/>
                        <fluent:MenuItem Header="Artist"
                                         x:Name="ArtistColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:MenuItem Header="Comment"
                                         x:Name="CommentColumnCheckBox"/>
                        <fluent:MenuItem Header="Composer"
                                         x:Name="ComposerColumnCheckBox"/>
                        <fluent:MenuItem Header="Cover Art"
                                         x:Name="CoverArtColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:MenuItem Header="Day"
                                         x:Name="DayColumnCheckBox"/>
                        <fluent:MenuItem Header="Genre"
                                         x:Name="GenreColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:MenuItem Header="Month"
                                         x:Name="MonthColumnCheckBox"/>
                        <fluent:MenuItem Header="Title"
                                         x:Name="TitleColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:MenuItem Header="Track #"
                                         x:Name="TrackNumberColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:MenuItem Header="Track Count"
                                         x:Name="TrackCountColumnCheckBox"/>
                        <fluent:MenuItem Header="Year"
                                         x:Name="YearColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:GroupSeparatorMenuItem/>
                        <fluent:MenuItem Header="Album Gain"
                                         x:Name="AlbumGainColumnCheckBox"/>
                        <fluent:MenuItem Header="Album Peak"
                                         x:Name="AlbumPeakColumnCheckBox"/>
                        <fluent:MenuItem Header="Track Gain"
                                         x:Name="TrackGainColumnCheckBox"/>
                        <fluent:MenuItem Header="Track Peak"
                                         x:Name="TrackPeakColumnCheckBox"/>
                        <fluent:GroupSeparatorMenuItem/>
                        <fluent:MenuItem Header="Bit Rate"
                                         x:Name="BitRateColumnCheckBox"/>
                        <fluent:MenuItem Header="Bits Per Sample"
                                         x:Name="BitsPerSampleColumnCheckBox"/>
                        <fluent:MenuItem Header="Channels"
                                         x:Name="ChannelsColumnCheckBox"/>
                        <fluent:MenuItem Header="Format"
                                         x:Name="FormatColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:MenuItem Header="Frame Count"
                                         x:Name="FrameCountColumnCheckBox"/>
                        <fluent:MenuItem Header="Play Length"
                                         x:Name="PlayLengthColumnCheckBox"
                                         IsChecked="True"/>
                        <fluent:MenuItem Header="Sample Rate"
                                         x:Name="SampleRateColumnCheckBox"/>
                    </fluent:DropDownButton>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Header="Metadata" ItemContainerStyle="{StaticResource LargeRibbonButton}">
                    <fluent:Button Header="Save All"
                                   Command="{Binding SaveAllCommand}"
                                   LargeIcon="{StaticResource SaveAllImage}"
                                   fluent:KeyTip.Keys="A"/>
                    <fluent:Button Header="Save Changes"
                                   Command="{Binding SaveModifiedCommand}"
                                   LargeIcon="{StaticResource SaveTableImage}"
                                   fluent:KeyTip.Keys="S"/>
                    <fluent:Button Header="Revert Changes"
                                   Command="{Binding RevertModifiedCommand}"
                                   LargeIcon="{StaticResource UndoImage}"
                                   fluent:KeyTip.Keys="R"/>
                    <fluent:ToggleButton Header="Settings"
                                         IsChecked="{Binding IsOpen, Source={x:Reference MetadataFlyout}}"
                                         LargeIcon="{StaticResource SettingsImage}"/>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Header="Analysis" ItemContainerStyle="{StaticResource LargeRibbonButton}">
                    <fluent:DropDownButton Header="Analyze All"
                                           LargeIcon="{StaticResource AnalyzeTraceImage}"
                                           ItemsSource="{Binding Analyzers}"
                                           fluent:KeyTip.Keys="N">
                        <fluent:DropDownButton.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header"
                                        Value="{Binding Name}"/>
                                <Setter Property="Command"
                                        Value="{Binding DataContext.AnalyzeAllCommand, RelativeSource={RelativeSource AncestorType={x:Type fluent:DropDownButton}}}"/>
                                <Setter Property="CommandParameter"
                                        Value="{Binding Name}"/>
                            </Style>
                        </fluent:DropDownButton.ItemContainerStyle>
                    </fluent:DropDownButton>
                    <fluent:ToggleButton Header="Settings"
                                         IsChecked="{Binding IsOpen, Source={x:Reference AnalysisFlyout}}"
                                         LargeIcon="{StaticResource SettingsImage}"/>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox Header="Encoding" ItemContainerStyle="{StaticResource LargeRibbonButton}">
                    <fluent:DropDownButton Header="Encode All"
                                           LargeIcon="{StaticResource OutputImage}"
                                           ItemsSource="{Binding Encoders}"
                                           fluent:KeyTip.Keys="E">
                        <fluent:DropDownButton.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="Header"
                                        Value="{Binding Name}"/>
                                <Setter Property="Command"
                                        Value="{Binding DataContext.EncodeAllCommand, RelativeSource={RelativeSource AncestorType={x:Type fluent:DropDownButton}}}"/>
                                <Setter Property="CommandParameter"
                                        Value="{Binding Name}"/>
                            </Style>
                        </fluent:DropDownButton.ItemContainerStyle>
                    </fluent:DropDownButton>
                    <fluent:ToggleButton Header="Settings"
                                         IsChecked="{Binding IsOpen, Source={x:Reference EncoderFlyout}}"
                                         LargeIcon="{StaticResource SettingsImage}"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="{Binding AudioFiles.Count, StringFormat=Editing {0} file(s)}"/>
            </StatusBarItem>
        </StatusBar>

        <DataGrid ItemsSource="{Binding AudioFiles}"
                  AutoGenerateColumns="False"
                  PreviewMouseRightButtonUp="DataGrid_OnPreviewMouseRightButtonUp"
                  GridLinesVisibility="Vertical"
                  AllowDrop="True"
                  IsReadOnly="{Binding IsBusy}"
                  PreviewDragOver="DataGrid_OnPreviewDragOver">

            <DataGrid.Resources>
                <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
                <views:BitRateConverter x:Key="BitRateConverter"/>
                <Style TargetType="TextBox"
                       x:Key="EntryTextBox"
                       BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="mahapps:TextBoxHelper.SelectAllOnFocus"
                            Value="True"/>
                </Style>
                <Style TargetType="TextBlock"
                       x:Key="NumericTextBlock"
                       BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="TextAlignment"
                            Value="Right"/>
                </Style>
            </DataGrid.Resources>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                           CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewKeyDown">
                    <prism:InvokeCommandAction Command="{Binding KeyDownCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewDrop">
                    <prism:InvokeCommandAction Command="{Binding DropCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick"
                              Command="{Binding EditSelectionCommand}"/>
            </DataGrid.InputBindings>

            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Edit..."
                              Command="{Binding EditSelectionCommand}"/>
                    <Separator/>
                    <MenuItem Header="Revert"
                              Command="{Binding RevertSelectionCommand}"/>
                    <MenuItem Header="Save"
                              Command="{Binding SaveSelectionCommand}"/>
                    <Separator/>
                    <MenuItem Header="Analyze..."
                              Command="{Binding AnalyzeSelectionCommand}"/>
                    <MenuItem Header="Encode..."
                              Command="{Binding EncodeSelectionCommand}"/>
                    <Separator/>
                    <MenuItem Header="Remove"
                              Command="{Binding RemoveSelectionCommand}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Style>
                <Style TargetType="{x:Type DataGrid}"
                       BasedOn="{StaticResource MetroDataGrid}">
                    <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource GrayBrush10}"/>
                </Style>
            </DataGrid.Style>

            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader"
                       BasedOn="{StaticResource MetroDataGridColumnHeader}">
                    <Setter Property="FontWeight"
                            Value="Normal"/>
                    <Setter Property="mahapps:ControlsHelper.ContentCharacterCasing"
                            Value="Normal"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>

            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True">
                                            <Expander.Header>
                                                <TextBlock Text="{Binding Name}"/>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter/>
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow"
                       BasedOn="{StaticResource MetroDataGridRow}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Metadata.Modified}"
                                     Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{StaticResource HighlightBrush}"/>
                            <Setter Property="BorderThickness"
                                    Value="1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Metadata.Modified}"
                                     Value="False">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource SolidColorBrush}"/>
                            <Setter Property="BorderThickness"
                                    Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Path"
                                    Binding="{Binding Path, Mode=OneTime}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference PathColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="File Name"
                                    Binding="{Binding FileName, Mode=OneTime}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference FileNameColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <mahapps:DataGridNumericUpDownColumn Header="Track #"
                                                     Binding="{Binding Metadata.TrackNumber}"
                                                     Minimum="1"
                                                     Maximum="99"
                                                     StringFormat="00"
                                                     Visibility="{Binding IsChecked, Source={x:Reference TrackNumberColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.TrackNumberIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.TrackNumberIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </mahapps:DataGridNumericUpDownColumn>
                <mahapps:DataGridNumericUpDownColumn Header="Track Count"
                                                     Binding="{Binding Metadata.TrackCount}"
                                                     Minimum="1"
                                                     Maximum="99"
                                                     StringFormat="00"
                                                     Visibility="{Binding IsChecked, Source={x:Reference TrackCountColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.TrackCountIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.TrackCountIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </mahapps:DataGridNumericUpDownColumn>
                <DataGridTextColumn Header="Title"
                                    Binding="{Binding Metadata.SongTitle, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference TitleColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.SongTitleIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.SongTitleIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Artist"
                                    Binding="{Binding Metadata.Artist, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference ArtistColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.ArtistIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.ArtistIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Album Artist"
                                    Binding="{Binding Metadata.AlbumArtist, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference AlbumArtistColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.AlbumArtistIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.AlbumArtistIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Composer"
                                    Binding="{Binding Metadata.Composer, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference ComposerColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.ComposerIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.ComposerIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Album"
                                    Binding="{Binding Metadata.Album, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference AlbumColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.AlbumIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.AlbumIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <mahapps:DataGridNumericUpDownColumn Header="Day"
                                                     Binding="{Binding Metadata.Day, UpdateSourceTrigger=PropertyChanged}"
                                                     Minimum="1"
                                                     Maximum="99"
                                                     StringFormat="00"
                                                     Visibility="{Binding IsChecked, Source={x:Reference DayColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.DayIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.DayIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </mahapps:DataGridNumericUpDownColumn>
                <mahapps:DataGridNumericUpDownColumn Header="Month"
                                                     Binding="{Binding Metadata.Month, UpdateSourceTrigger=PropertyChanged}"
                                                     Minimum="1"
                                                     Maximum="99"
                                                     StringFormat="00"
                                                     Visibility="{Binding IsChecked, Source={x:Reference MonthColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.MonthIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.MonthIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </mahapps:DataGridNumericUpDownColumn>
                <mahapps:DataGridNumericUpDownColumn Header="Year"
                                                     Binding="{Binding Metadata.Year, UpdateSourceTrigger=PropertyChanged}"
                                                     Minimum="1000"
                                                     Maximum="9999"
                                                     Visibility="{Binding IsChecked, Source={x:Reference YearColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.YearIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.YearIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </mahapps:DataGridNumericUpDownColumn>
                <DataGridTemplateColumn Header="Cover Art"
                                        Visibility="{Binding IsChecked, Source={x:Reference CoverArtColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Metadata.CoverImage, Mode=OneTime}"
                                   Height="18"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Genre"
                                    Binding="{Binding Metadata.Genre, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference GenreColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.GenreIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.GenreIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Comment"
                                    Binding="{Binding Metadata.Comment, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference CommentColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.CommentIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.CommentIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Track Gain"
                                    Binding="{Binding Metadata.TrackGain, Mode=OneWay, StringFormat={}{0} dB}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference TrackGainColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.TrackGainIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.TrackGainIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Track Peak"
                                    Binding="{Binding Metadata.TrackPeak, Mode=OneWay}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference TrackPeakColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.TrackPeakIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.TrackPeakIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Album Gain"
                                    Binding="{Binding Metadata.AlbumGain, Mode=OneWay, StringFormat={}{0} dB}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference AlbumGainColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.AlbumGainIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.AlbumGainIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Album Peak"
                                    Binding="{Binding Metadata.AlbumPeak, Mode=OneWay}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference AlbumPeakColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MetroDataGridCell}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Metadata.AlbumPeakIsModified}"
                                             Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Metadata.AlbumPeakIsModified}"
                                             Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Format"
                                    Binding="{Binding Info.Format, Mode=OneTime}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference FormatColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Play Length"
                                    Binding="{Binding Info.PlayLength, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference PlayLengthColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Bit Rate"
                                    Binding="{Binding Info.BitRate, Mode=OneTime, Converter={StaticResource BitRateConverter}}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference BitRateColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Sample Rate"
                                    Binding="{Binding Info.SampleRate, Mode=OneTime, StringFormat={}{0} Hz}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference SampleRateColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Bits Per Sample"
                                    Binding="{Binding Info.BitsPerSample, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference BitsPerSampleColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Channels"
                                    Binding="{Binding Info.Channels, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference ChannelsColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Frame Count"
                                    Binding="{Binding Info.FrameCount, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference FrameCountColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
            </DataGrid.Columns>
        </DataGrid>

    </DockPanel>
</mahapps:MetroWindow>
