<!-- Copyright © 2019 Jeremy Herbison

This file is part of AudioWorks.

AudioWorks is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public
License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
version.

AudioWorks is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
details.

You should have received a copy of the GNU Affero General Public License along with AudioWorks. If not, see
<https://www.gnu.org/licenses/>. -->

<mahapps:MetroWindow x:Class="AudioWorks.UI.Views.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
                     xmlns:prism="http://prismlibrary.com/"
                     xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
                     xmlns:fluent="urn:fluent-ribbon"
                     xmlns:views="clr-namespace:AudioWorks.UI.Views"
                     prism:ViewModelLocator.AutoWireViewModel="True"
                     mahapps:DialogParticipation.Register="{Binding}"
                     Title="AudioWorks"
                     Icon="../Resources/Icon.png"
                     Height="600"
                     Width="1000"
                     TitleCharacterCasing="Normal">

    <mahapps:MetroWindow.Resources>
        <Style TargetType="mahapps:Flyout"
               x:Key="Flyout"
               BasedOn="{StaticResource {x:Type mahapps:Flyout}}">
            <Setter Property="Position"
                    Value="Right"/>
            <Setter Property="AnimateOpacity"
                    Value="True"/>
            <Setter Property="Margin"
                    Value="0,31,0,0"/>
        </Style>
        <Style TargetType="TabControl"
               x:Key="FlyoutTabControl"
               BasedOn="{StaticResource {x:Type TabControl}}">
            <Setter Property="SelectedIndex"
                    Value="0"/>
            <Setter Property="VerticalAlignment"
                    Value="Top"/>
            <Setter Property="Width"
                    Value="300"/>
            <Setter Property="Margin"
                    Value="22,0,22,0"/>
            <Setter Property="Padding"
                    Value="0,22,0,0"/>
            <Setter Property="mahapps:TabControlHelper.Underlined"
                    Value="SelectedTabItem"/>
        </Style>
    </mahapps:MetroWindow.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <prism:InvokeCommandAction Command="{Binding ExitCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <mahapps:MetroWindow.Flyouts>
        <mahapps:FlyoutsControl>
            <mahapps:Flyout Header="Encoder Settings"
                            IsOpen="{Binding ShowEncoderSettings}"
                            CloseCommand="{Binding ToggleEncoderSettingsCommand}"
                            Style="{StaticResource Flyout}">
                <TabControl prism:RegionManager.RegionName="EncoderSettings"
                            Style="{StaticResource FlyoutTabControl}">
                    <TabControl.ItemContainerStyle>
                        <Style TargetType="TabItem"
                               BasedOn="{StaticResource {x:Type TabItem}}">
                            <Setter Property="Header"
                                    Value="{Binding DataContext.Title}"/>
                        </Style>
                    </TabControl.ItemContainerStyle>
                </TabControl>
            </mahapps:Flyout>
            <mahapps:Flyout Header="Metadata Settings"
                            IsOpen="{Binding ShowMetadataSettings}"
                            CloseCommand="{Binding ToggleMetadataSettingsCommand}"
                            Style="{StaticResource Flyout}">
                <TabControl prism:RegionManager.RegionName="MetadataSettings"
                            Style="{StaticResource FlyoutTabControl}">
                    <TabControl.ItemContainerStyle>
                        <Style TargetType="TabItem"
                               BasedOn="{StaticResource {x:Type TabItem}}">
                            <Setter Property="Header"
                                    Value="{Binding DataContext.Title}"/>
                        </Style>
                    </TabControl.ItemContainerStyle>
                </TabControl>
            </mahapps:Flyout>
        </mahapps:FlyoutsControl>
    </mahapps:MetroWindow.Flyouts>

    <DockPanel>

        <fluent:Ribbon DockPanel.Dock="Top" IsQuickAccessToolBarVisible="False">
            <fluent:RibbonTabItem Header="Home">
                <fluent:RibbonGroupBox Header="File">
                    <fluent:DropDownButton Header="Open"
                                           LargeIcon="{StaticResource OpenFileDialogImage}"
                                           fluent:KeyTip.Keys="O">
                        <fluent:Button Header="Select File(s)"
                                       Command="{Binding OpenFilesCommand}"
                                       SizeDefinition="Middle"
                                       Icon="{StaticResource OpenFileImage}"
                                       fluent:KeyTip.Keys="F"/>
                        <fluent:Button Header="Search a Directory"
                                       Command="{Binding OpenDirectoryCommand}"
                                       SizeDefinition="Middle"
                                       Icon="{StaticResource OpenFolderImage}"
                                       fluent:KeyTip.Keys="D"/>
                    </fluent:DropDownButton>
                    <fluent:Button Header="Exit"
                                   Click="ExitButton_OnClick"
                                   LargeIcon="{StaticResource ExitImage}"
                                   fluent:KeyTip.Keys="X"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Metadata">
                    <fluent:Button Header="Save All"
                                   Command="{Binding SaveAllCommand}"
                                   LargeIcon="{StaticResource SaveAllImage}"
                                   fluent:KeyTip.Keys="A"/>
                    <fluent:Button Header="Save Changes"
                                   Command="{Binding SaveModifiedCommand}"
                                   LargeIcon="{StaticResource SaveTableImage}"
                                   fluent:KeyTip.Keys="S"/>
                    <fluent:Button Header="Revert Changes"
                                   Command="{Binding RevertModifiedCommand}"
                                   LargeIcon="{StaticResource UndoImage}"
                                   fluent:KeyTip.Keys="R"/>
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="Options">
                    <fluent:DropDownButton Header="Show/Hide Columns"
                                           LargeIcon="{StaticResource AddRemoveColumnsImage}"
                                           fluent:KeyTip.Keys="C">
                        <fluent:CheckBox Header="Path"
                                         x:Name="PathColumnCheckBox"/>
                        <fluent:GroupSeparatorMenuItem/>
                        <fluent:CheckBox Header="Album"
                                         IsChecked="True"
                                         x:Name="AlbumColumnCheckBox"/>
                        <fluent:CheckBox Header="Album Artist"
                                         x:Name="AlbumArtistColumnCheckBox"/>
                        <fluent:CheckBox Header="Artist"
                                         IsChecked="True"
                                         x:Name="ArtistColumnCheckBox"/>
                        <fluent:CheckBox Header="Comment"
                                         x:Name="CommentColumnCheckBox"/>
                        <fluent:CheckBox Header="Composer"
                                         x:Name="ComposerColumnCheckBox"/>
                        <fluent:CheckBox Header="Cover Art"
                                         IsChecked="True"
                                         x:Name="CoverArtColumnCheckBox"/>
                        <fluent:CheckBox Header="Day"
                                         x:Name="DayColumnCheckBox"/>
                        <fluent:CheckBox Header="Genre"
                                         IsChecked="True"
                                         x:Name="GenreColumnCheckBox"/>
                        <fluent:CheckBox Header="Month"
                                         x:Name="MonthColumnCheckBox"/>
                        <fluent:CheckBox Header="Title"
                                         IsChecked="True"
                                         x:Name="TitleColumnCheckBox"/>
                        <fluent:CheckBox Header="Track #"
                                         IsChecked="True"
                                         x:Name="TrackNumberColumnCheckBox"/>
                        <fluent:CheckBox Header="Track Count"
                                         x:Name="TrackCountColumnCheckBox"/>
                        <fluent:CheckBox Header="Year"
                                         IsChecked="True"
                                         x:Name="YearColumnCheckBox"/>
                        <fluent:GroupSeparatorMenuItem/>
                        <fluent:CheckBox Header="Album Gain"
                                         x:Name="AlbumGainColumnCheckBox"/>
                        <fluent:CheckBox Header="Album Peak"
                                         x:Name="AlbumPeakColumnCheckBox"/>
                        <fluent:CheckBox Header="Track Gain"
                                         x:Name="TrackGainColumnCheckBox"/>
                        <fluent:CheckBox Header="Track Peak"
                                         x:Name="TrackPeakColumnCheckBox"/>
                        <fluent:GroupSeparatorMenuItem/>
                        <fluent:CheckBox Header="Bit Rate"
                                         x:Name="BitRateColumnCheckBox"/>
                        <fluent:CheckBox Header="Bits Per Sample"
                                         x:Name="BitsPerSampleColumnCheckBox"/>
                        <fluent:CheckBox Header="Channels"
                                         x:Name="ChannelsColumnCheckBox"/>
                        <fluent:CheckBox Header="Format"
                                         IsChecked="True"
                                         x:Name="FormatColumnCheckBox"/>
                        <fluent:CheckBox Header="Frame Count"
                                         x:Name="FrameCountColumnCheckBox"/>
                        <fluent:CheckBox Header="Play Length"
                                         IsChecked="True"
                                         x:Name="PlayLengthColumnCheckBox"/>
                        <fluent:CheckBox Header="Sample Rate"
                                         x:Name="SampleRateColumnCheckBox"/>
                    </fluent:DropDownButton>
                    <fluent:Button Header="Encoder Settings"
                                   Command="{Binding ToggleEncoderSettingsCommand}"
                                   LargeIcon="{StaticResource ShowAllConfigurationsImage}"
                                   fluent:KeyTip.Keys="E"/>
                    <fluent:Button Header="Metadata Settings"
                                   Command="{Binding ToggleMetadataSettingsCommand}"
                                   LargeIcon="{StaticResource ConfigurationEditorImage}"
                                   fluent:KeyTip.Keys="M"/>
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
        </fluent:Ribbon>

        <DataGrid ItemsSource="{Binding AudioFiles}"
                  AutoGenerateColumns="False"
                  PreviewMouseRightButtonUp="DataGrid_OnPreviewMouseRightButtonUp"
                  GridLinesVisibility="Vertical"
                  AllowDrop="True"
                  IsReadOnly="{Binding IsBusy}"
                  PreviewDragOver="DataGrid_OnPreviewDragOver">
            <DataGrid.Resources>
                <BooleanToVisibilityConverter x:Key="VisibilityConverter"/>
                <views:BitRateConverter x:Key="BitRateConverter"/>
                <Style TargetType="TextBox"
                       x:Key="EntryTextBox"
                       BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="mahapps:TextBoxHelper.SelectAllOnFocus"
                            Value="True"/>
                </Style>
                <Style TargetType="TextBlock"
                       x:Key="NumericTextBlock"
                       BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="TextAlignment"
                            Value="Right"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Style>
                <Style TargetType="{x:Type DataGrid}"
                       BasedOn="{StaticResource MetroDataGrid}">
                    <Setter Property="AlternatingRowBackground"
                            Value="{DynamicResource GrayBrush10}" />
                </Style>
            </DataGrid.Style>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="DataGridColumnHeader"
                       BasedOn="{StaticResource MetroDataGridColumnHeader}">
                    <Setter Property="FontWeight"
                            Value="Normal"/>
                    <Setter Property="mahapps:ControlsHelper.ContentCharacterCasing"
                            Value="Normal"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}"
                                           CommandParameter="{Binding SelectedItems, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewKeyDown">
                    <prism:InvokeCommandAction Command="{Binding KeyDownCommand}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="PreviewDrop">
                    <prism:InvokeCommandAction Command="{Binding DropCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick"
                              Command="{Binding EditSelectionCommand}"/>
            </DataGrid.InputBindings>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Edit..."
                              Command="{Binding EditSelectionCommand}"/>
                    <Separator/>
                    <MenuItem Header="Revert"
                              Command="{Binding RevertSelectionCommand}"/>
                    <MenuItem Header="Save"
                              Command="{Binding SaveSelectionCommand}"/>
                    <Separator/>
                    <MenuItem Header="Remove"
                              Command="{Binding RemoveSelectionCommand}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Path"
                                    Binding="{Binding Path, Mode=OneTime}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference PathColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <mahapps:DataGridNumericUpDownColumn Header="Track #"
                                                     Binding="{Binding Metadata.TrackNumber}"
                                                     Minimum="1"
                                                     Maximum="99"
                                                     StringFormat="00"
                                                     Visibility="{Binding IsChecked, Source={x:Reference TrackNumberColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <mahapps:DataGridNumericUpDownColumn Header="Track Count"
                                                     Binding="{Binding Metadata.TrackCount}"
                                                     Minimum="1"
                                                     Maximum="99"
                                                     StringFormat="00"
                                                     Visibility="{Binding IsChecked, Source={x:Reference TrackCountColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Title"
                                    Binding="{Binding Metadata.SongTitle, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference TitleColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Artist"
                                    Binding="{Binding Metadata.Artist, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference ArtistColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Album Artist"
                                    Binding="{Binding Metadata.AlbumArtist, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference AlbumArtistColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Composer"
                                    Binding="{Binding Metadata.Composer, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference ComposerColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Album"
                                    Binding="{Binding Metadata.Album, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference AlbumColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <mahapps:DataGridNumericUpDownColumn Header="Day"
                                                     Binding="{Binding Metadata.Day, UpdateSourceTrigger=PropertyChanged}"
                                                     Minimum="1"
                                                     Maximum="99"
                                                     StringFormat="00"
                                                     Visibility="{Binding IsChecked, Source={x:Reference DayColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <mahapps:DataGridNumericUpDownColumn Header="Month"
                                                     Binding="{Binding Metadata.Month, UpdateSourceTrigger=PropertyChanged}"
                                                     Minimum="1"
                                                     Maximum="99"
                                                     StringFormat="00"
                                                     Visibility="{Binding IsChecked, Source={x:Reference MonthColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <mahapps:DataGridNumericUpDownColumn Header="Year"
                                                     Binding="{Binding Metadata.Year, UpdateSourceTrigger=PropertyChanged}"
                                                     Minimum="1000"
                                                     Maximum="9999"
                                                     Visibility="{Binding IsChecked, Source={x:Reference YearColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTemplateColumn Header="Cover Art"
                                        Visibility="{Binding IsChecked, Source={x:Reference CoverArtColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image Source="{Binding Metadata.CoverImage, Mode=OneTime}"
                                   Height="18"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Genre"
                                    Binding="{Binding Metadata.Genre, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference GenreColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Comment"
                                    Binding="{Binding Metadata.Comment, UpdateSourceTrigger=PropertyChanged}"
                                    EditingElementStyle="{StaticResource EntryTextBox}"
                                    Visibility="{Binding IsChecked, Source={x:Reference CommentColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Track Gain"
                                    Binding="{Binding Metadata.TrackGain, Mode=OneTime, StringFormat={}{0} dB}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference TrackGainColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Track Peak"
                                    Binding="{Binding Metadata.TrackPeak, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference TrackPeakColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Album Gain"
                                    Binding="{Binding Metadata.AlbumGain, Mode=OneTime, StringFormat={}{0} dB}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference AlbumGainColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Album Peak"
                                    Binding="{Binding Metadata.AlbumPeak, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference AlbumPeakColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Format"
                                    Binding="{Binding Info.Format, Mode=OneTime}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference FormatColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Play Length"
                                    Binding="{Binding Info.PlayLength, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference PlayLengthColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Bit Rate"
                                    Binding="{Binding Info.BitRate, Mode=OneTime, Converter={StaticResource BitRateConverter}}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference BitRateColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Sample Rate"
                                    Binding="{Binding Info.SampleRate, Mode=OneTime, StringFormat={}{0} Hz}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference SampleRateColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Bits Per Sample"
                                    Binding="{Binding Info.BitsPerSample, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference BitsPerSampleColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Channels"
                                    Binding="{Binding Info.Channels, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference ChannelsColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridTextColumn Header="Frame Count"
                                    Binding="{Binding Info.FrameCount, Mode=OneTime}"
                                    ElementStyle="{StaticResource NumericTextBlock}"
                                    IsReadOnly="True"
                                    Visibility="{Binding IsChecked, Source={x:Reference FrameCountColumnCheckBox}, Converter={StaticResource VisibilityConverter}, Mode=OneWay}"/>
                <DataGridCheckBoxColumn Header="Modified"
                                        Binding="{Binding Metadata.Modified, Mode=OneWay}"
                                        IsReadOnly="True"
                                        ElementStyle="{DynamicResource MetroDataGridCheckBox}"/>
            </DataGrid.Columns>
        </DataGrid>

    </DockPanel>
</mahapps:MetroWindow>
